global !p
def check_key(rx, dic, groupnum = 1, charnum = 6): # Check if the string match the rx expression; if match, check if the string is the key of the dic. Here suppose the length of the pattern is less than 4.
	string = vim.eval(r"strpart(getline('.'), 0, col('.') - 1)") # get the string from the head of the line to the position of the cursor
	length = len(string)
	if length >= charnum:
		string = string[-charnum:]
	match = re.search(rx + r'$', string)
	if match:
		return match.group(groupnum) in dic
	else:
		return 0

dic_head_title = {
	r'1' : r'#',
	r'2' : r'##',
	r'3' : r'###',
	r'4' : r'####',
	r'5' : r'#####',
	r'6' : r'######',
}

dic_bold = {
	r'd' : r'Description',
	r'e' : r'Example',
	r'm' : r'More Details',
	r'mo' : r'MOTIVATION',
	r'n' : r'Notation',
	r'r' : r'Reference',
	r's' : r'Solving',
	r't' : r'Total',
}
dic_course = {
	r'a' : r'Astrophysics',
	r'aqm' : r'Advanced Quantum Mechanics',
	r'c' : r'Computational Physics',
	r'cl' : r'C Language',
	r'dg' : r'Differential Geometry',
	r'e' : r'English',
	r'el' : r'Electrodynamics',
	r'gr' : r'General Relativity',
	r'gt' : r'Group Theory',
	r'mmp' : r'Mathematical Method of Physics',
	r'ps' : r'Physical Simulation',
	r'qm' : r'Quantum Mechanics',
	r'qi' : r'Quantum Information',
	r'qft' : r'Quantum Field Theory',
	r's' : r'Statistic Physics',
	r'sa' : r'Sciencetific American',
	r'sp' : r'Solid Physics',
	r't' : r'Theoretical Mechanics',
	r'tm' : r'Thermal Mechanics',
	r'o' : r"Oxford Learner's Grammar",
	r'nno' : r'Nano-Optics',
	r'v' : r'Vim Config',
}

dic_word_property = {
	r'a' : r'adj.',
	r'av' : r'adv.',
	r'c' : r'conj.',
	r'v' : r'v.',
	r'vi' : r'vi.',
	r'vt' : r'vt.',
	r'n' : r'n.',
}
endglobal

# h: head
snippet "h([0-9]{1,3})" "check_key(r'h([0-9]{1,3})', dic_head_title)" ire
`!p snip.rv = dic_head_title[match.group(1)]` $1
endsnippet

# a: angle
priority 1
snippet a "angle bracket" i
\\<$1\\>
endsnippet

# b: bold, blog
snippet b "bold" i
**$1**
endsnippet

priority 2
snippet "b([A-Za-z0-9]{1,3})" "check_key(r'b([A-Za-z0-9]{1,3})', dic_bold)" ire
**`!p snip.rv = dic_bold[match.group(1)]` :**$1
endsnippet

snippet "B([A-Za-z0-9]{1,3})" "check_key(r'B([A-Za-z0-9]{1,3})', dic_bold)" ire
**`!p snip.rv = dic_bold[match.group(1)]`**$1
endsnippet

# i: italic
snippet i "italic" i
*$1*
endsnippet

# l: link
snippet l "link" i
[${1:text}](${2:link})
endsnippet

priority 1

# m: math
snippet m "inline maht" i
\$$1\$
endsnippet

snippet M "display math" i
\$\$
$1
\$\$
endsnippet

# c: code, course
snippet c "inline code" i
\`$1\`
endsnippet

snippet C "display code" i
\`\`\`$1
$2
\`\`\`
endsnippet

priority 2
snippet "C([a-z]{1,3})" "check_key(r'C([a-z]{1,3})', dic_course)" ire
*`!p snip.rv = dic_course[match.group(1)]` :*
endsnippet

snippet "c([a-z]{1,3})" "check_key(r'c([a-z]{1,3})', dic_course)" ire
*`!p snip.rv = dic_course[match.group(1)]`*
endsnippet

priority 2
snippet "w([a-z]{1,3})" "check_key(r'w([a-z]{1,3})', dic_word_property)" ire
\\<`!p snip.rv = dic_word_property[match.group(1)]`\\>
endsnippet

snippet today "date of today" i
`date +%A,\ %B\ %d,\ %Y`
endsnippet

# d: delete
snippet d "delete line" i
~~$1~~
endsnippet

# f: figure, font matter
snippet f "describe" option
![${1:alt text}](${2:path} "$1")
endsnippet

snippet ft "figure/img with HTML tag" i
<img src="${1:figure paht}">
endsnippet

snippet fm "font matter"
---
title: '$1'
index_img:
math: true
date: '`date "+%Y-%m-%d %H:%M"`'
categories:
- $2
tags:
- $3
---

> $4

<!--more-->

endsnippet

snippet fr "font matter for READ"
> This essay is a reading notes of *$1*, *^2* [^1]
endsnippet

# p: punctuation
snippet pn "name separator" option
Â·
endsnippet

# s: space, segment line
snippet s "segment line (weak)"
-------------------------$1-------------------------
endsnippet

snippet S "segment line (strong)"
=========================$1=========================
endsnippet

priority 1
snippet sp "space" i
&nbsp;
endsnippet

priority 2
snippet sh "double space" i
&emsp;&emsp;
endsnippet

# t: template
snippet t "tag" i
{% $1 %}
endsnippet

snippet ts "schedule" i
### $1
#### Morning
- $2

#### Afternoon
- $3

#### Night
- $4
endsnippet

snippet tdt "diary (thought)" i
### Thought
#### $1
endsnippet

snippet tp "today photo" i
### $1
&emsp;&emsp;$2

![today photo, `date +%Y-%m-%d`](figure/`date +%Y-%m-%d`.${3:png})
endsnippet

snippet tP "today photo" i
### Today Photo
#### $1
&emsp;&emsp;$2

![today photo, `date +%Y-%m-%d`](figure/`date +%Y-%m-%d`.${3:png})
endsnippet

# n: notation
snippet nc "checkmark" i
\\checkmark
endsnippet

# u: underline
snippet u "underline" i
<u>$1</u>
endsnippet
